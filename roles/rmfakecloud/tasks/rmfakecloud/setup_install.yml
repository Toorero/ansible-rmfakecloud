- name: Ensure rmfakecloud group is created
  group:
    name: "{{ rmfakecloud_user_groupname }}"
    state: present

- name: Ensure rmfakecloud user is created
  user:
    name: "{{ rmfakecloud_user_username }}"
    state: present
    group: "{{ rmfakecloud_user_groupname }}"
    home: "{{ rmfakecloud_base_path }}"
    create_home: no
    system: yes

- name: Ensure rmfakecloud paths exist
  file:
    path: "{{ item.path }}"
    state: directory
    mode: 0750
    owner: "{{ rmfakecloud_user_username }}"
    group: "{{ rmfakecloud_user_groupname }}"
  with_items:
    - { path: "{{ rmfakecloud_docker_src_files_path }}", when: "{{ rmfakecloud_docker_image_self_build }}" }
    - { path: "{{ rmfakecloud_data_path }}", when: true}
  when: "item.when"

# Docker stuff

- name: Ensure Docker is installed
  apt:
    name:
      - docker-ce
      - "python{{'3' if ansible_python.version.major == 3 else ''}}-docker"
    state: latest
  
- name: Ensure rmfakecloud repository is present on self-build
  git:
    repo: "{{ rmfakecloud_container_image_self_build_repo }}"
    dest: "{{ rmfakecloud_docker_src_files_path }}"
    force: "yes"
  register: rmfakecloud_git_pull_results
  when: rmfakecloud_docker_image_self_build
  
- name: Ensure rmfakecloud Docker image is built
  docker_image:
    name: "{{ rmfakecloud_docker_image }}"
    source: build
    force_source: "{{ rmfakecloud_git_pull_results.changed if ansible_version.major > 2 or ansible_version.minor >= 8 else omit }}"
    force: "{{ omit if ansible_version.major > 2 or ansible_version.minor >= 8 else rmfakecloud_git_pull_results.changed }}"
    build:
      dockerfile: docker/Dockerfile
      path: "{{ rmfakecloud_docker_src_files_path }}"
      pull: yes
  when: rmfakecloud_docker_image_self_build
  
- name: Ensure rmfakecloud Docker image is pulled
  docker_image:
    name: "{{ rmfakecloud_docker_image }}"
    source: "{{ 'pull' if ansible_version.major > 2 or ansible_version.minor > 7 else omit }}"
    force_source: "{{ rmfakecloud_docker_image_force_pull if ansible_version.major > 2 or ansible_version.minor >= 8 else omit }}"
    force: "{{ omit if ansible_version.major > 2 or ansible_version.minor >= 8 else rmfakecloud_docker_image_force_pull }}"
  when: not rmfakecloud_docker_image_self_build

# config stuff

- name: Warn about not setting jwt_secret_key
  debug: 
    msg: "WARNING: rmfakecloud_jwt_secret_key is not set!"
  when: rmfakecloud_jwt_secret_key == ""

- name: Ensure valid smtp config is set
  assert:
    that:
      - (rmfakecloud_smtp_server != "" and rmfakecloud_smtp_username != "" and rmfakecloud_smtp_password != "") or (rmfakecloud_smtp_server == "" and rmfakecloud_smtp_username == "" and rmfakecloud_smtp_password == "")
  
- name: Ensure valid handwriting recognition config is set
  assert:
    that:
      - (rmfakecloud_rmapi_hwr_applicationkey != "" and rmfakecloud_rmapi_hwr_hmac != "") or (rmfakecloud_rmapi_hwr_applicationkey == "" and rmfakecloud_rmapi_hwr_hmac == "")

# systemd stuff
  
- name: Ensure rmfakecloud.service is present
  template:
    src: "{{ role_path }}/templates/systemd/rmfakecloud.service.j2"
    dest: "{{ rmfakecloud_systemd_path }}/rmfakecloud.service"
    mode: 0644
  notify:
  - Ensure systemd reloaded after service change installation
  - Ensure service is restarted

- name: Ensure rmfakecloud.service is enabled
  when: rmfakecloud_enabled_service and not rmfakecloud_service_now
  service:
    name: rmfakecloud
    enabled: true

- name: Ensure rmfakecloud.service is started
  when: rmfakecloud_enabled_service and rmfakecloud_service_now
  service:
    name: rmfakecloud
    state: started
    enabled: true
